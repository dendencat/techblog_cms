# Upstream: Django アプリケーションへのプロキシ先（Docker 内のサービス名 "django" の 8000 番ポート）
upstream django {
    server django:8000;
}

# ── Production: HTTP (ACME チャレンジ用および HTTP→HTTPS リダイレクト) ──
server {
    listen 80;
    server_name blog.iohub.link;

    # Certbot 用の ACME チャレンジファイルを公開する場所
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # それ以外のリクエストは HTTPS にリダイレクト
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ── Production: HTTPS サーバ (本番用) ──
server {
    listen 443 ssl http2;
    server_name blog.iohub.link;

    # SSL 証明書（Let’s Encrypt により取得したもの）
    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # SSL 基本設定
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:50m;
    ssl_session_tickets off;
    ssl_buffer_size     8k;
    ssl_early_data      off;
    
    # OCSP Stapling
    resolver            8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout    5s;
    ssl_stapling        on;
    ssl_stapling_verify on;
    
    # セキュリティヘッダー
    add_header X-Frame-Options       "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection       "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy       "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy    "camera=(), microphone=(), geolocation=()" always;
    
    # エラーページの設定
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Django アプリケーションへのリバースプロキシ
    location / {
        proxy_pass         http://django;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_redirect     off;
        
        # プロキシ設定
        proxy_buffer_size  16k;
        proxy_buffers      4 16k;
        client_max_body_size 10M;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # 静的ファイルの配信
    location /static/ {
        alias   /var/www/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # メディアファイルの配信
    location /media/ {
        alias   /var/www/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
}

# ── Development: HTTP サーバ (localhost 用) ──
server {
    listen 80;
    server_name localhost 127.0.0.1;

    location / {
        proxy_pass         http://django;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_redirect     off;
        proxy_buffering    off;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # 静的ファイル
    location /static/ {
        alias   /var/www/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # メディアファイル
    location /media/ {
        alias   /var/www/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}
